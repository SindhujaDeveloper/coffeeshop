{"version":3,"file":"static/js/241.1c33bcc6.chunk.js","mappings":"uRASe,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAsDC,EAAAA,EAAAA,KAAY,SAACC,GAAU,OAAKA,EAAMC,KAAK,IAArFC,EAAc,EAAdA,eAAgBC,EAAY,EAAZA,aAAcC,EAAW,EAAXA,YAgBtC,OAdAC,EAAAA,EAAAA,YAAU,WACFH,IACAP,GAASW,EAAAA,EAAAA,IAAe,CACpB,OAAU,mCACV,OAAU,SACV,GAAMF,EAAYG,SAClB,QAAU,SAAD,OAAWH,EAAYI,WAAa,GAAE,6CAC/C,OAAU,UAEdX,EAAS,KAEjB,GAAG,CAACF,EAAUE,EAAUK,EAAgBE,KAIpC,SAAC,KAAM,CACHK,oBAAkB,EAClBC,cAAe,CACXH,SAAU,IAEdI,SAAU,SAACC,GACPjB,GAASkB,EAAAA,EAAAA,IAAaD,IACtBf,EAAS,IACb,EAAE,SAED,YAAwE,IAArEe,EAAM,EAANA,OAAQE,EAAM,EAANA,OAAQC,EAAY,EAAZA,aAAcC,EAAY,EAAZA,aAA0BC,GAAF,EAAVC,WAAiB,EAALD,OACxD,OACI,SAACE,EAAA,EAAS,CAACC,OAAK,YACZ,kBAAMT,SAAUK,EAAcK,UAAU,aAAY,WAChD,UAACC,EAAA,EAAG,CAACC,MAAO,CAAEC,YAAa,MAAOC,aAAc,OAAQ,WACpD,UAACC,EAAA,EAAU,CAACL,UAAU,OAAM,WACxB,SAACK,EAAA,OAAe,CAACC,GAAG,eAAeJ,MAAO,CAAEK,QAAS,EAAGC,gBAAiB,UAAWC,OAAQ,MAAOC,YAAa,UAAWC,aAAc,MAAOC,YAAa,QAASC,kBAAmB,OAAQ,UAC7L,SAACC,EAAA,EAAK,CAACC,IAAKC,EAAWC,MAAM,OAAOC,OAAQ,OAAQC,UAAU,aAElE,SAACC,EAAA,UAAY,CACTC,YAAY,YACZ,aAAW,WACXC,MAAO/B,EAAOL,SACdqC,SAAU7B,EACV8B,KAAK,WACLC,aAAc,YAGpBhC,EAAOP,UAAYJ,KAAiB,gBAAKwB,GAAG,QAAO,SAAExB,QAE3D,SAACmB,EAAA,EAAG,CAACC,MAAO,CAAEC,YAAa,MAAOC,aAAc,MAAOsB,WAAY,MAAO,UACtE,mBACIC,UAAW/B,GAA6B,KAApBL,EAAOL,SAE3B0C,QAAS,WAAQtD,GAASkB,EAAAA,EAAAA,IAAaD,IAAUf,EAAS,IAAK,EAC/DwB,UAAU,YAAW,sBAK7B,SAACC,EAAA,EAAG,CAACC,MAAO,CAAEC,YAAa,KAAMC,aAAc,KAAMsB,WAAY,MAAO,UACpE,iBAAK1B,UAAU,YAAYE,MAAO,CAAE2B,QAAS,OAAQC,cAAe,OAAQ,WACxE,6CACA,cAAG5B,MAAO,CAAE6B,WAAY,OAAQC,OAAQ,UAAWC,eAAgB,aAAeL,QAAS,kBAAMpD,EAAS,eAAe,EAAC,0BAGlI,SAACyB,EAAA,EAAG,CAACC,MAAO,CAAEC,YAAa,KAAMC,aAAc,KAAMsB,WAAY,MAAO,UACpE,cAAG1B,UAAU,YAAW,uDAE5B,SAACC,EAAA,EAAG,CAACC,MAAO,CAAEC,YAAa,KAAMC,aAAc,KAAMsB,WAAY,MAAO,UACpE,cAAG1B,UAAU,YAAW,mCAK5C,GAGZ,C","sources":["container/login/index.tsx"],"sourcesContent":["import { Formik } from 'formik';\nimport { Container, Form, Image, InputGroup, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { loginRequest, sendSmsRequest } from '../../redux/actions/login';\nimport '../../assets/css/login.scss'\nimport { useEffect } from 'react';\nimport phoneIcon from '../../assets/images/phoneIcon.png'\n\nexport default function Login() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { successMessage, errorMessage, userDetails } = useSelector((state: any) => state.login);\n\n    useEffect(() => {\n        if (successMessage) {\n            dispatch(sendSmsRequest({\n                'apikey': '6on957rb36978j0rl148a6j226v03jmr',\n                'sender': 'SEDEMO',\n                'to': userDetails.Mobileno,\n                'message': `Hello ${userDetails.Firstname || ''}, This is a test message from spring edge`,\n                'format': 'json'\n            }))\n            navigate('/');\n        }\n    }, [dispatch, navigate, successMessage, userDetails]);\n\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={{\n                Mobileno: '',\n            }}\n            onSubmit={(values) => {\n                dispatch(loginRequest(values));\n                navigate('/')\n            }}\n        >\n            {({ values, errors, handleChange, handleSubmit, handleBlur, dirty }) => {\n                return (\n                    <Container fluid>\n                        <form onSubmit={handleSubmit} className='form_login'>\n                            <Row style={{ paddingLeft: '10%', paddingRight: '10%' }}>\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Text id=\"basic-addon1\" style={{ outline: 0, backgroundColor: '#FFF3E6', border: '0px', borderColor: '#6B3715', borderRadius: '0px', borderStyle: 'solid', borderBottomWidth: '2px' }}>\n                                        <Image src={phoneIcon} width='30px' height={'30px'} draggable='false' />\n                                    </InputGroup.Text>\n                                    <Form.Control\n                                        placeholder=\"Mobile No\"\n                                        aria-label=\"Mobileno\"\n                                        value={values.Mobileno}\n                                        onChange={handleChange}\n                                        name=\"Mobileno\"\n                                        autoComplete={'off'}\n                                    />\n                                </InputGroup>\n                                {(errors.Mobileno || errorMessage) && <div id=\"email\">{errorMessage}</div>}\n                            </Row>\n                            <Row style={{ paddingLeft: '10%', paddingRight: '10%', paddingTop: '7%' }}>\n                                <button\n                                    disabled={!dirty || values.Mobileno === ''}\n                                    // type=\"submit\"\n                                    onClick={() => { dispatch(loginRequest(values)); navigate('/') }}\n                                    className=\"commonBtn\"\n                                >\n                                    LOGIN\n                                </button>\n                            </Row>\n                            <Row style={{ paddingLeft: '5%', paddingRight: '5%', paddingTop: '7%' }}>\n                                <div className=\"signupTxt\" style={{ display: 'flex', flexDirection: 'row' }}>\n                                    <p>Have an Account?</p>\n                                    <p style={{ fontWeight: 'bold', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => navigate('/main/signup')} >Signup</p>\n                                </div>\n                            </Row>\n                            <Row style={{ paddingLeft: '5%', paddingRight: '5%', paddingTop: '3%' }}>\n                                <p className=\"signupTxt\">-----------------OR-------------------</p>\n                            </Row>\n                            <Row style={{ paddingLeft: '5%', paddingRight: '5%', paddingTop: '3%' }}>\n                                <p className=\"signupTxt\">Go To Home Page</p>\n                            </Row>\n                        </form>\n                    </Container>\n                )\n            }}\n        </Formik >\n    );\n}"],"names":["Login","dispatch","useDispatch","navigate","useNavigate","useSelector","state","login","successMessage","errorMessage","userDetails","useEffect","sendSmsRequest","Mobileno","Firstname","enableReinitialize","initialValues","onSubmit","values","loginRequest","errors","handleChange","handleSubmit","dirty","handleBlur","Container","fluid","className","Row","style","paddingLeft","paddingRight","InputGroup","id","outline","backgroundColor","border","borderColor","borderRadius","borderStyle","borderBottomWidth","Image","src","phoneIcon","width","height","draggable","Form","placeholder","value","onChange","name","autoComplete","paddingTop","disabled","onClick","display","flexDirection","fontWeight","cursor","textDecoration"],"sourceRoot":""}